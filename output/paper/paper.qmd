---
title: "House Price in Nanjing: Exploring Distribution of House Price and Performing Prediction with Multiple Linear Regression and Random Forest"
author: "Yufei Liu"
thanks: "Code and data are available at: https://github.com/Florence-Liu/house-price"
date: today
date-format: long
abstract: "House price in Nanjing has grown rapidly and became a concern in recent years. This paper examines the relationship between house price in Nanjing, structural attributes of the property, and location using open data collected from Lianjia.com, and predict house price in Nanjing with different models. We find a geographically-imbalanced distribution of house price in Nanjing with large variance within and between each district. By comparing the MAE and RMSE, we find the random forest model gives a better prediction accuracy than the multiple linear regression model. Further work could include geocoding data to perform spatial autocorrelation analysis that consider the spatial effect in the data. "
format: pdf
number-sections: true
toc: false
bibliography: references.bib
---

# Introduction

House prices in China has grown rapidly since 2000, and cities such as Shanghai, Beijing, and Shenzhen are among the highest around the world today [@citeHouseincrease]. Nanjing, which is located in the heart of Yangtze River Delta in eastern China and approximately 300 km from Shanghai, is the capital city for Jiangsu Province, one of the most economically developed provinces in China [@citeNanjing]. The house price in Nanjing has been a concern due to increased population in recent years [@citeConcern].

In this paper, we investigate how structural attributes and location of house affect the total house price and explore the characteristics of residential housing. We are also interested in predicting house price in Nanjing using different models. We use` Python` to collect data from Lianjia.com and `R` to clean and analyze collected data. We construct a multiple linear regression model with total house price explained by 9 other variables representing structural characteristics and location, and a random forest regression model with same variables. We find that the house price in Nanjing is geographically-imbalanced and even the variance within each district is large, indicating possible income and wealth inequality. Comparing two models with Mean Absolute Error (MAE) and Root Mean Squared Error (RMSE), we find that the random forest model gives a better prediction accuracy on both test and train data, indicating possible non-linear relationships between variables. Further work could include geospatial data to find spatial correlations and consider a more comprehensive model including more attributes such as surronding environment.

The remainder of this paper is structured as follows: @sec-data discusses the data with @sec-data_description including information about data collection and data cleaning results, and @sec-data_visualization including graphs and tables representing relationships between variables and distributions of variables; @sec-model introduces the split of train/test data and two models: a multiple linear regression model and a random forest regression model, and specifies parameters; @sec-result shows the estimates of fitted models and compares two models; @sec-discussion includes discussions about model results and implications with @sec-weakness talking about the weaknesses and future improvement.


# Data

We used `Python` [@citePython] to obtain the datasets and `R` [@citeR] to do the analysis in this paper. We used packages `tidyverse` [@citeTidyverse], `stringr` [@citeStringr], and `here` [@citeHere] to clean and load the data as well as create figures. We used package `latex2expand` [@citeLatex2expand] to add title to figures, `knitr` [@citeKnitr] and `modelsummary` [@citeModelsummary] to generate tables, and `corrplot` [@citeCorrplot] to make the correlation plot. We also used package `randomForest` [@citeRandomforest] and `Metrics` [@citeMetrics] to build up a random forest model and compare the results with multiple linear regression model using different metrics. The color style of the figures was created referring to a R colors cheet-sheet [@citeRcolor].

## Data description

The dataset in this analysis was obtained from Lianjia.com using a web scrapping program in Python [@citePython]. Lianjia.com is the website of one of the largest estate brokerage firm in China and the source is open and accessible [@citeLianjia]. We collected 11 datasets with over 30,000 observations for 11 different districts in Nanjing, China. To account for temporal variations of housing market, we specifically collected sales property price listed on 22 November, 2023 instead of posted transactions and to consider the consistency, we only collected data for residential houses and discarded data for other types of properties. The datasets includes listed sales prices and structural attributes of the properties including the floor area, the unit price per $m^2$, number of rooms, etc.

The original datasets were merged into one large dataset by districts with missing value removed. After obtaining 5 detailed structural characteristics by splitting `Structrual attributes` variable in original dataset, we created two new variables: `Detailed_Floor` and `Facing_South`. The variable `Detailed_Floor` was obtained from the variable `Total floor`. If the property is in high floor, the detailed floor will be the total floor multiplies by 0.7; if the property is in medium floor, the detailed floor will be the total floor multiplies by 0.45; and if the property is in low floor, the detailed floor will be the total floor multiplies by 0.2. The varible `Facing_South` is a dummy variable with 1 representing the house is south-facing and 0 otherwise. Definitions and descriptions for the 10 variables are listed in @tbl-data. Most of them captured the structural attributes of the house and only variable `District` indicated an approximate location of the house.

```{r}
#| echo: false
#| message: false
#| warning: false


#### Workspace setup ####
library(tidyverse)
library(knitr)
library(here)
library(latex2exp)
library(randomForest)
library(corrplot)
library(Metrics)
library(modelsummary)

#### Read in the cleaned data ####
data <- read_csv(here("output/data/cleaned_data.csv"), 
                 show_col_types = FALSE)

```

```{r}
#| label: tbl-data
#| tbl-cap: Description for variables
#| echo: false
#| message: false
#| warning: false

var <- c("Total_Price", "Unit_Price", "District", "Area", "Furnished", "Bedroom", "Living_Room", "Total_Floors", "Detailed_Floor", "Facing_South")
type <- c("Continuous", "Continuous", "Character", "Continuous", "Character", "Discrete", "Discrete", "Discrete", "Discrete", "Dummy")
def <- c("Total house price in ten-thousand yuan", "Unit house price in yuan per square meter", "District where the house is located", "Floor area of the house in square meter ", "Decoration status of the house", "Number of bedrooms", "Number of living/dining rooms", "Total floors of the building", "Floor level of the house", "Whether the house is facing south")
kable(data.frame(var, type, def), col.names = c("Variable", "Type", "Definition"))
```

## Data visualiztion

@tbl-price shows a summary for average total house price in ten-thousand yuan, average unit price in yuan/$m^2$, and average floor area in $m^2$ for 11 districts in Nanjing. We find that the highest average house price was in Jianye district while the lowest average house price was in Gaochun district, which is also consistent with the average unit price. However, the average floor area shows a different pattern that Qinhuai district had the smallest average floor area while Jianye and Pukou districts had the largest average floor area. The difference was not very large within 30 $m^2$. This may relate to geographical information for each districts since the area and population differ from each district. Different from relatively centered average floor area for each districts, the average house price and unit price show a larger variance. This may relate to business activities and industrial development in each district.

```{r}
#| label: tbl-price
#| tbl-cap: Descriptive statistics about house price in each districts
#| echo: false
#| message: false
#| warning: false

data |> group_by(District) |>
  summarise(avg_total = round(mean(Total_Price)), 
            avg_unit = round(mean(Unit_Price)),
            avg_area = round(mean(Area))) |>
  kable(col.names = c("District", "Average total price",
                      "Average unit price", "Average floor area"))
```

@fig-con, @fig-dis, @fig-char basically explore the statistical features of the 9 explanatory variables. @fig-con shows the distribution for variable `Area`, `Total_Price`, and `Unit_Price`, @fig-dis shows the distribution for variable `Bedroom`, `Living_Room`, `Total_Floors`, and `Detailed_Floor`, and @fig-char shows the proportion of house with 4 different decoration status `Furnished` and orientations `Facing_South` in each district. We find that the total house price, the unit price, and the area were all right-skewed, which means there were less extremely high values for these variables, and the mean values were larger than the median ones. We can also find that most of the values centered in a range. The area mostly centered between 0 to 200 $m^2$, the total price mostly centered between 0 to 1,000 ten-thousand yuan, and the unit price had a larger range between 0 to 50,000 yuan.

```{r}
#| label: fig-con
#| fig-cap: Distribution of Area, Total Price, and Unit Price
#| echo: false
#| message: false
#| warning: false

df_con <- data |> select(Total_Price, Unit_Price, Area)
df_con <- gather(df_con)

df_con |> ggplot(aes(x = value)) +
  geom_histogram(fill = "#A8D8B9") +
  facet_wrap(~key, scales = "free") +
  labs(y = "Number of house", x = "Variable value") +
  theme_minimal() +
  theme(axis.text = element_text(size = 7))

```

From @fig-dis we find that most of listed houses had 2 or 3 bedrooms and 1 to 2 living/dining rooms. The number of rooms was relatively simple with a few houses having over 4 bedrooms and 3 living/dining rooms. However, for total floors of the building and detailed floor, they were various. We find for total floors, there are 3 bursts in approximately 5, 10, and 20, which corresponded to 3 common types of residential buildings in China. However, for detailed floor of listed house, we find that they mostly centered at lower level of the building. This may relate to the sunshine condition as the residential buildings were higher and more dense recently, a lower level house may have a bad sunshine and lighting condition.

```{r}
#| label: fig-dis
#| fig-cap: Number of house with different bedroom numbers, living room numbers, total floors, and detailed floor
#| echo: false
#| message: false
#| warning: false

df_dis <- data |> select(Bedroom, Living_Room, Total_Floors, Detailed_Floor)
df_dis <- gather(df_dis)

df_dis |> ggplot(aes(x = value)) +
  geom_bar(fill = "#A8D8B9") +
  facet_wrap(~key, scales = "free") +
  labs(y = "Number of House", x = "Variable value") +
  theme_minimal() +
  theme(axis.text = element_text(size = 7))
```

We find from @fig-char that the numbers of house each districts in our data were similar excluding Gaochun district. This related to the web scrapping program we used to obtained the data. However, it indicates that the total number of housel listed in Gaochun district was limited. For the orientation of the house, we find that relatively half of the house is south-facing and in Lishui and Gaochun district the proportions were even higher. It shows a tradition in China that people tend to choose house facing south, which according to Chinese traditional Feng Shui has positive effect on someone's luck [@citeFengshui]. For decoration status of the house, the data was not that informative since type `Other` occupies a large proportion, which means the information is missing for the house. However, from existing data we find that fully furnished houses on sale has a larger proportion than partly furnished or not furnished house. This may relate to the data we collected that there were a lot of second-hand house on sale instead of newly closed. It is noticeable that house in Jianyi district had a much larger proportion of fully furnished house. This may related to the house type that there are more fully furnished luxury apartments in Jianyi since the Central Business District (CBD) is located there.

```{r}
#| label: fig-char
#| echo: false
#| message: false
#| warning: false
#| fig-cap: Proportion of house with difference decoration status and whether facing south in 11 districts
#| fig-subcap: 
#|   - "South-facing"
#|   - "Decoration"
#| layout-ncol: 2


data |> group_by(District, Facing_South) |>
  summarise(n = n()) |>
  ggplot(aes(x = District, y = n, fill = factor(Facing_South))) +
  geom_bar(stat = "identity") +
  theme_minimal() +
  labs(y = "Number of house", fill = "Whether south-facing") +
  scale_fill_manual(values = c("#A8D8B9", "#FFD966"), labels = c("No", "Yes")) +
  theme(legend.position = "bottom", axis.text = element_text(size = 8))

data |> group_by(District, Furnished) |>
  summarise(n = n()) |>
  ggplot(aes(x = District, y = n, fill = factor(Furnished))) +
  geom_bar(stat = "identity") +
  labs(y = "Number of house", fill = "Decoration status") +
  theme_minimal() +
  scale_fill_manual(values = c("#7FCCE5", "#FF9A8B", "#A8D8B9", "#FFD966")) +
  theme(legend.position = "bottom", axis.text = element_text(size = 8))
```

@fig-area and @fig-price shows the how the total house price in each districts and Nanjing city as a total related to area and unit price respectively. The blue line is the linear fitted line and the red line is a fitted line without designating methods. From @fig-area we find that although the total price increases with area, the increase rate in each district was different with Lishui district had a notable slow rate compared with others. The increase rate indeed is just the unit price, so this is consistent with what we found from @tbl-price. We could also see that some districts had larger variance in area and total price which can simply inferred from axis scale. Pukou district had a large variance of total price with highest total price over 4000 ten-thousand yuan as well as for area.

```{r}
#| label: fig-area
#| fig-cap: Relationship between total house price and floor area for 11 districts and Nanjing city in total
#| echo: false
#| message: false
#| warning: false

data |>
  ggplot(aes(x=Area, y=Total_Price)) +
  geom_point(alpha = 0.3, size = 0.8, color = "lightgoldenrod") +
  geom_point(data = transform(data, District = "All in Nanjing"), 
             alpha = 0.5, size = 0.8, color = "lightgoldenrod") +
  geom_smooth(data = transform(data, District = "All in Nanjing"),
              aes(color = "Non-linear"), se=F, size=0.5) +
  geom_smooth(data = transform(data, District = "All in Nanjing"),
              method = "lm", aes(color = "Linear"), se=F, size=0.5) +
  facet_wrap(~District, scales = "free") +
  theme_minimal() +
  geom_smooth(aes(color = "Non-linear"), se=F, size=0.5) +
  geom_smooth(method = "lm", aes(color = "Linear"), se=F, size=0.5) +
  labs(x = TeX(r"(Area in $m^2$)"), y = "Total Price") +
  scale_colour_manual(name = "Line", values = c("steelblue3", "indianred3")) +
  theme(legend.position = "bottom", axis.text = element_text(size = 6),
        strip.text.x = element_text(size = 8))
```

@fig-price further shows how total price changed with unit price. We find that although @tbl-price shows the average unit price for each district was all smaller than 50,000, the highest unit price in most districts was even larger than 80,000. This is consistent with the distribution of unit price that it was right-skewed, a few extremely large values could significantly influence the average value. This is also true for total price that even the average value in each district was smaller than 600, there are still a lot of points at levels higher than even 1,500. This shows the imbalanced distribution of house price, which may also indicate income and wealth inequality.

```{r}
#| label: fig-price
#| fig-cap: Relationship between total house price and unit price for 11 districts and Nanjing city in total
#| echo: false
#| message: false
#| warning: false

data |>
  ggplot(aes(x=Unit_Price, y=Total_Price)) +
  geom_point(alpha = 0.3, size = 0.8, color = "lightgoldenrod") +
  geom_point(data = transform(data, District = "All in Nanjing"), 
             alpha = 0.3, size = 0.8, color = "lightgoldenrod") +
  geom_smooth(data = transform(data, District = "All in Nanjing"),
              aes(color = "Non-linear"), se=F, size=0.5) +
  geom_smooth(data = transform(data, District = "All in Nanjing"),
              method = "lm", aes(color = "Linear"), se=F, size=0.5) +
  facet_wrap(~District, scales = "free") +
  theme_minimal() +
  geom_smooth(aes(color = "Non-linear"), se=F, size=0.5) +
  geom_smooth(method = "lm", aes(color = "Linear"), se=F, size=0.5) +
  labs(x = TeX(r"(Unit Price in yuan/$m^2$)"), y = "Total Price") +
  scale_colour_manual(name = "Line", values = c("steelblue3", "indianred3")) +
  theme(legend.position = "bottom", axis.text = element_text(size = 6),
        strip.text.x = element_text(size = 8))
```

# Model

We will use two machine learning algorithms in this analysis: a multiple linear regression model, and a random forest regression model. We will randomly split our data into training and testing datasets with 80% being training data and 20% being testing data.

## Multiple Linear Regression

The multiple linear regression model is shown as:

\begin{align*}
Y = \beta_{0} + \sum^{i=1}_{n} \beta_ix_i + \epsilon = \beta_0 + \beta_1x_1 + \beta_2x_2 + \cdots + \beta_nx_n + \epsilon  
\end{align*}

where 

* $Y$ is the response variables `Total_Price`
* $x_i(i = 1,2,\cdots,n)$ are explanatory variables. In this case we have 9 explanatory variables
* $\beta_0$ is the intercept of the model
* $b_i(i = 1,2,\cdots,n)$ are regression coefficients
* $\epsilon$ is the random error

```{r}
#| echo: false
#| warning: false
#| message: false
#| include: false
#### Split training and testing sets ####
set.seed(777)
trainid <- sample(nrow(data), 0.8*nrow(data))
train <- data[trainid,]
test <- data[-trainid,]
```

```{r}
#| label: model
#| echo: false
#| warning: false
#| message: false

model_mlg <- lm(Total_Price ~., data = train)
#summary(model_mlg)

model_rf <- randomForest(Total_Price ~., data=train, importance = TRUE)

#varImpPlot(model_rf)
```

## Random Forest Regression

# Result

```{r}
#| label: rf
#| echo: false
#| warning: false
#| message: false

predict_rf_test <- predict(model_rf, newdata = test)
mae_rf_test <- round(mae(test$Total_Price, predict_rf_test),1)
rmse_rf_test <- round(rmse(test$Total_Price, predict_rf_test),1)

predict_rf_train <- predict(model_rf, newdata = train)
mae_rf_train <- round(mae(train$Total_Price, predict_rf_train),1)
rmse_rf_train <- round(rmse(train$Total_Price, predict_rf_train),1)

```


```{r}
#| label: mlg
#| echo: false
#| warning: false
#| message: false

predict_mlg_test <- predict(model_mlg, newdata = test)
mae_mlg_test <- round(mae(test$Total_Price, predict_mlg_test),1)
rmse_mlg_test <- round(rmse(test$Total_Price, predict_mlg_test),1)

predict_mlg_train <- predict(model_mlg, newdata = train)
mae_mlg_train <- round(mae(train$Total_Price, predict_mlg_train),1)
rmse_mlg_train <- round(rmse(train$Total_Price, predict_mlg_train),1)

```


```{r}
#| label: tbl-metrics
#| tbl-cap: Summary of different metrics for test and train data for two models
#| echo: false
#| message: false
#| warning: false

MAE <- c(mae_mlg_train, mae_mlg_test, mae_rf_train, mae_rf_test)
RMSE <- c(rmse_mlg_train, rmse_mlg_test, rmse_rf_train, rmse_rf_test)
Model <- c("MLG train", "MLG test", "RF train", "RF test")
metrics <- data.frame(Model, MAE, RMSE)
kable(metrics)
  
```


```{r}
#| label: tbl-model
#| tbl-cap: Summary of the multiple linear regression model
#| echo: false
#| message: false
#| warning: false

modelsummary(model_mlg)

```


```{r}
#| label: fig-model
#| echo: false
#| message: false
#| warning: false
#| fig-cap: Variable importance of the random forest model based on MSE and Node Purity
#| fig-subcap: 
#|   - "MSE"
#|   - "Node Purity"
#| layout-ncol: 2

ImpData <- as.data.frame(importance(model_rf))
ImpData$Var.Names <- row.names(ImpData)

ggplot(ImpData, aes(x=Var.Names, y=`%IncMSE`)) +
  geom_segment( aes(x=Var.Names, xend=Var.Names, y=0, yend=`%IncMSE`), color="skyblue") +
  geom_point(aes(size = IncNodePurity), color="orange2", alpha=0.6) +
  theme_minimal() +
  labs(x = "Variable") +
  coord_flip() +
  theme(legend.position="bottom", panel.grid.major.y = element_blank(),
        panel.border = element_blank(), axis.ticks.y = element_blank())

ggplot(ImpData, aes(x=Var.Names, y=`IncNodePurity`)) +
  geom_segment( aes(x=Var.Names, xend=Var.Names, y=0, yend=`IncNodePurity`), color="skyblue") +
  geom_point(aes(size = IncNodePurity), color="orange2", alpha=0.6) +
  theme_minimal() +
  labs(x = "Variable") +
  coord_flip() +
  theme(legend.position="bottom", panel.grid.major.y = element_blank(),
        panel.border = element_blank(), axis.ticks.y = element_blank())
```

```{r}
#| label: fig-cor
#| fig-cap: Correlation between each numeric variables
#| echo: false
#| warning: false
#| message: false

cor_matrix <- cor(data.frame(data$Total_Price, data$Unit_Price, data$Area, data$Bedroom, data$Living_Room, data$Total_Floors, data$Detailed_Floor, data$Facing_South))

corrplot(cor_matrix, tl.col = "black")
```

RUNNING TIME

# Discussion

In 2013, the Nanjing Government adjusted the boundaries and administrative divisions of Nanjing. Since then, there are 11 districts in Nanjing with Gulou, Qinhuai, Xuanwu, Jianye districts considered as inner proper while Qixia, Yuhuatai, Pukou, Jiangning, Lishui, Gaochun, Liuhe districts are considered as suburban areas of Nanjing [@citeDivision].


residential structure, different from canadian. floor level regards to population density

district area difference, population difference

CBD, City center

less extreme high price $\rightarrow$ regulation, some are not listed publicly.

what type of house is on sale

income and wealth inequality


## Weakness and future work

web scrapping maximum 100 pages

Hedonic pricing model, other spatial data for detailed analysis.

\newpage

# Reference
